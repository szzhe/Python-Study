
【列表】
    使用中括号包含
    每个元素之间使用逗号分隔
    可包含任意数据类型
    
    访问
        列表是有序的数据集，通过列表名【索引】的方式访问列表中的元素
        索引编号
            从做向右依次为0,1,2，...，n-1
            从右向左依次为-1，-2，...，-n
        访问元素的索引必须存在，否则报错
    元素修改
        通过直接给列表名【索引】修改对应索引位置的值
        修改元素的索引必须存在，否在报错
    遍历列表
        使用for访问列表中所有的元素  for num in nums: print(num)
    类型转换
        可以通过函数list将其他可遍历的类型转化为列表 list("abcdefg")
        备注：整数不是可遍历类型
    使用range函数快速创建序列 nums = list(range(10))
        range(end) 创建从0到end-1的连续整数组成的序列
        range(start,end) 创建从start到end-1的连续整数组成的序列
        range(start,end,step) 创建从start到end-1的每间隔step个整数组成的序列
    交换元素
        tmp = a;a = b; b = tmp
        a,b=b,a

    场景操作
        获取list元素的数量 >>>len(nums)
        获取list中元素最大值、最小值 >>>max(nums);min(nums)
        判断元素是否在list中存储 >>>1 in list;2 not in list 由True和False反馈结果
        删除列表中元素
            根据索引删除list中对应元素 del nums[0]
            
    运算
        加(+) 必须为两个list相加
        乘(*) 必须一个为整数 | 列表叠加N次，拼成一个首尾相连的新的列表
    
    切片 slice 
        按照规则获取list中一部分元素生成新的List >>> nums = list(range(10))
            list[start:end:step] >>> nums[2:7:2]
            list[::step] >>> nums[::3]
            list[start:end] >>> nums[1:5]
            list[:end] >>> nums[:4]
            list[start:] >>> num[2:]
            list[:] >>> num[:]
        应用
            引用(=赋值，新变量=旧变量；id()相同)
                nums = list(range(10))
                nums_1 = nums
                nums_1[1] = 20
            复制(slice赋值，新变量≠旧变量；id()不相同)
                nums_2 = nums[:]
                nums_2[1] = 40
            反转list
                >>> nums[::-1]
            获取索引为偶数的元素组成的list
                >>> nums[::2]
            获取索引为奇数的元素组成的list
                >>> nums[1::2]
            通过切片进行list的增、删、改
                语法：list[start:end] = [v_1,v_2,v_3,...,v_n]
                使用列表[v_1,v_2,v_3,...,v_n]替换切片对应位置的元素
                    切片元素的数量大于[v_1,...,v_n]数量
                        按照顺序替换切片中的元素，切片中多远的元素删除 >>>nums = list(range(10)) >>>del nums[2] >>>nums[2:3] = [2,3,4]
                    切片元素的数量小于[v_1,...,v_n]数量
                        按照顺序替换切片中的元素，赋值list中多余的元素则添加到切片最右索引之后  >>>nums = list(range(10)) >>>del nums[2] >>>nums[2:7] = [2,3]
                                                                                                >>>nums = list(range(10)) >>>del nums[2] >>>nums[2:7] = []
                
    列表函数
        append 添加元素到list最右侧
            @ append 参数类型：任意类型；返回值：无；功能：将参数中元素整体追加到list最右侧
        extend 将一个[[可遍历序列iterable]]中的所有元素追加到list后(用新列表扩展原来的列表)
            @ extend 参数类型：可遍历；返回值：无；功能：将可遍历参数中的每个元素追加到list最右侧
        clear 清空list中的元素
            @ clear 参数类型:无；返回值：无；功能：清空list
        copy 复制list中的所有元素到新list中并返回
            @ copy 参数类型：无；返回值：list；功能：赋值list中元素并返回
        count 计算list中存在相同元素的数量
            # 如果查询的元素在list中不存在，不报错，返回0
            @ count 参数类型：任意类型；返回值：Int；功能：获取元素在list中出现的次数
        index 获取元素在list中的位置
            # 返回a在列表中第一次出现的位置，默认搜索整个列表 >>> print(nums1.index(2))
            # 返回a在指定切片内第一次出现的位置 >>> print(nums1.index(4,6,8))
            @ index 参数类型：任意类型；返回值：int；功能：获取元素在list中的位置，不存在则报错
        insert 在list指定位置添加元素
        pop 弹出list中指定位置的元素(默认最右侧)
            @ pop 参数类型：整数；返回值：任意；功能：根据索引删除list中元素，并返回，若索引在list中不存在则报错
        remove 移除list中指定的元素
            @ remove 参数类型：任意；返回值：无；功能：从list中删除指定的值，若值不存在，则报错
        reverse 对list中元素进行反转
            @ reverse 参数类型：无；返回值：无；功能：对list中元素进行反转
        sort 对list中元素进行排序 
            @ sort 参数类型：排序规则，是否反转；返回值：无；功能：对list中元素进行排序
            # L.sort(key=None, reverse=False)
        
    帮助函数
        查看数据类型可使用的函数{成员方法、成员变量}
            dir(list)
        查看函数使用方法
            help(list.extend)
            
    队列
        先进先出
        list.append + list.pop(0) # 根据索引删除list中元素
    堆栈 EG：函数调用的先后关系
        先进后出
        list.append + list.pop #默认删除list中最右侧数据
            
