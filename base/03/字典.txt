
字典是一种KEY-VALUE结构，简称K-V对
声明方式：
    d = {}
    d = dict{}
    d = {'a':1,'b':2}

    >>> d = dict.fromkeys(range(5))
    >>> d
    {0:None,1:None,2:None,3:None,4:None}
    >>> d = dict.fromkeys(range(5),'abc')
    >>> d
    {0:abc,1:abc,2:abc,3:abc,4:abc}
    
    >>> d = {'a':1}
    >>> d['b']
    Error
    >>> d['b'] = 2
    Not Error
    
### 字典的操作

增加
    >>> d ={'a':1,'b':2}
    >>> d['c'] = 3 #直接使用key作为下标，对某个不存在的下标赋值，会增加一个k-v对
    >>> d
    {'a':1,'b':2,'c'=3}
    
    >>> d.update([('d':4),('p':0)]) #传入的是一个可迭代对象
    >>> d
    {'a':1,'b':2,'c'=3,'d'=4,'p'=0}
    >>> d.update({'d':5}) #若存在就会修改字典
    {'a':1,'b':2,'c'=3,'d'=5,'p'=0}

修改
    >>> d['a'] = 11
    >>> d
    {'a':11,'b':2,'c'=3,'d'=5,'p'=0}
    >>> d.update('a':111)
    >>> d
    {'a':111,'b':2,'c'=3,'d'=5,'p'=0}

删除
    >>> d.pop('a') #删除一个k-v对，并且返回其value值
    111
    >>> d
    {'b':2,'c'=3,'d'=5,'p'=0}
    >>> d.pop('a')
    KeyError:'a'
    >>> d.pop('a','default')
    'default'
    >>> d
    {'b':2,'c'=3,'d'=5,'p'=0}
    >>> d.pop('b','default') #若值存在，default不会取到
    'default'
    >>> d.popitem() #随机删除一对k-v对，并且返回这对k-v对，若k-v对不存在，则抛出KeyError
    
    >>> d.clear()
    >>> d
    {}
    
    >>> d = {'b':2,'c'=3,'d'=5,'p'=0}
    >>> del d['a'] # del关键字，删除一个引用，尽量不用del，能用pop就用pop
    KeyError:'a'
    
    若需要修改字典中的key，只能通过先删除再添加
    
    
    
