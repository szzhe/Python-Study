
### 什么是柯里化？
'''指的是将原来接受两个参数的函数，变成新的接受一个参数的函数的过程。新的函数返回一个以原有第二个参数为参数的函数
   调用方式：由 z = f(x, y) 转换成 z = f(x)(y)
'''

def add(x, y):
    return x + y
print(add(4, 5)) # z = f(x,y)

def new_add(x):
    def inner(y):
        return x + y
    return inner
# foo = new_add(4)
# foo(5)
print(new_add(4)(5)) # z = f(x)(y)

fn.__name__ # 存储函数的名字
fn.__doc__ #存储函数的文档
dir(func) #查看所有的func内置函数

import datetime
import time

# 优化一：

def copy_propertities_1(src, dst):
    dst.__name__ = src.__name__
    dst.__doc__ = src.__doc__

# 优化二：

def copy_propertities_2(src):
    def _copy(dst):
        dst.__name__ = src.__name__
        dst.__doc__ = src.__doc__
        return dst
    return _copy

def logger(fn):
    @copy_propertities_1
    def wrap(*args, **kwargs):
        start = datetime.datetime.now()
        ret = fn(*args, **kwargs)
        end = datetime.datetime.now()
        print("{} called took {}".format(fn.__name__, end - start))
        return copy_propertities_1ret
    # copy_propertities_1(fn,wrap) # 优化一
    # copy_propertities_2(fn)(wrap)  # 优化二
    return wrap

@logger  # logger_add = logger(sleep)
def sleep(x):
    '''This is sleep'''
    time.sleep(x)

print(sleep.__name__)
print(sleep.__doc__)

